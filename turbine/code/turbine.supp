
# Valgrind memcheck suppressions file
# To use: set
#   VALGRIND='valgrind --suppressions=turbine.supp --num-callers=$N'
# Set N high for MPICH errors- these have deep call stacks

# Put these in your .valgrindrc:
# -q
# --memcheck:leak-check=yes
# --memcheck:track-origins=yes
# --show-reachable=yes

# Other tips:
# http://wiki.tcl.tk/3840
# http://wiki.tcl.tk/3248

# Use: export LANG=POSIX - helps a little
#      Tcl -DPURIFY - did not help
# Configure MPICH with --enable-g=dbg,meminit
#       meminit prevents uninitialized data warnings

{
  tcl-malloc-1
  Memcheck:Leak
  fun:malloc
  fun:Tcl_Alloc
  ...
}

{
  tcl-malloc-2
  Memcheck:Leak
  fun:malloc
  fun:TclpAlloc
  ...
}

{
  tcl-malloc-3
  Memcheck:Leak
  fun:malloc
  fun:GetBlocks
  fun:TclpAlloc
  ...
}

{
  tcl-thread-malloc-4
  Memcheck:Leak
  fun:malloc
  fun:TclThreadAllocObj
  ...
}

{
  tcl-thread-malloc-5
  Memcheck:Leak
  fun:malloc
  fun:TclpThreadCreateKey
  ...
}

{
  tcl-table-malloc-1
  Memcheck:Leak
  fun:malloc
  fun:TSDTableCreate
  fun:TclThreadStorageKeySet
  ...
}

{
  tcl-mutex-malloc-1
  Memcheck:Leak
  fun:malloc
  fun:TclpNewAllocMutex
  ...
}

{
  tcl-dlopen-1
  Memcheck:Leak
  fun:calloc
  ...
  fun:TclpDlopen
  ...
}

{
  tcl-cache-calloc-1
  Memcheck:Leak
  fun:calloc
  fun:GetCache
  fun:TclpAlloc
  ...
}

{
  tcl-pthread-calloc-1
  Memcheck:Leak
  fun:calloc
  ...
  fun:TclpThreadCreate
  ...
}


{
  tcl-realloc-1
  Memcheck:Leak
  fun:realloc
  fun:TclpRealloc
  ...
}

{
  tcl-vasprintf-realloc-2
  Memcheck:Leak
  fun:realloc
  fun:vasprintf
  fun:asprintf
  fun:dlerror
  fun:FindSymbol
  ...
}

{
  tcl-table-realloc-1
  Memcheck:Leak
  fun:realloc
  fun:TSDTableGrow
  fun:TclThreadStorageKeySet
  fun:Tcl_GetThreadData
  ...
}

{
  tcl-pwuid-1
  Memcheck:Leak
  fun:malloc
  ...
  fun:TclpGetPwUid
  ...
}

{
  tcl-allocatefreeobjects
  Memcheck:Leak
  fun:malloc
  fun:Tcl_Alloc
  fun:TclAllocateFreeObjects
}

{
  mpi-memalign-1
  Memcheck:Leak
  fun:memalign
  ...
  fun:tls_get_addr_tail
  ...
  fun:PMPI_Init
}

{
  mpi-init-calloc
  Memcheck:Leak
  fun:calloc
  ...
  fun:PMPI_Init
}

{
  mpi-vcrt
  Memcheck:Leak
  fun:malloc
  fun:MPID_VCRT_Create
}

# The following Param suppressions are unnecessary when using
#     MPICH's meminit...

{
  mpi-send
  Memcheck:Param
  writev(vector[...])
  fun:writev
  fun:MPID_nem_tcp_iStartContigMsg
  ...
  fun:PMPI_Send
}

{
  mpi-barrier-send
  Memcheck:Param
  writev(vector[...])
  fun:writev
  fun:MPID_nem_tcp_iSendContig
  ...
  fun:PMPI_Barrier
}

{
  mpi-comm-dup-send
  Memcheck:Param
  writev(vector[...])
  fun:writev
  ...
  fun:PMPI_Comm_dup
}

{
  mpi-comm-split-send
  Memcheck:Param
  writev(vector[...])
  fun:writev
  ...
  fun:PMPI_Comm_split
}

{
  mpi-allgather-send
  Memcheck:Param
  writev(vector[...])
  fun:writev
  fun:MPID_nem_tcp_iSendContig
  ...
  fun:PMPI_Allgather
}

{
  mpi-finalize-send
  Memcheck:Param
  writev(vector[...])
  fun:writev
  fun:MPID_nem_tcp_iStartContigMsg
  ...
  fun:PMPI_Finalize
  ...
}

{
  glib-dlopen-1
  Memcheck:Leak
  fun:malloc
  ...
  fun:dl_open_worker
  ...
  fun:dlopen_doit
  ...
}

{
  glib-dlopen-1
  Memcheck:Leak
  fun:malloc
  ...
  fun:dl_open_worker
  ...
  fun:dlopen_doit
  ...
}

{
  vg-calloc-1
  Memcheck:Leak
  fun:calloc
  fun:_dl_map_object_from_fd
  ...
  fun:_dl_catch_error
}

{
  vg-calloc-1
  Memcheck:Leak
  fun:calloc
  fun:_dl_new_object
  ...
  fun:_dl_catch_error
}

{
  vg-malloc-1
  Memcheck:Leak
  fun:malloc
  ...
  fun:pthread_exit
}

# Local Variables:
# mode: sh-mode
# sh-basic-offset: 2
# End:
